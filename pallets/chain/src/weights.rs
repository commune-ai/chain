
//! Autogenerated weights for `pallet_chain`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2024-12-02, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ubuntu-64gb-hil-2`, CPU: `AMD EPYC-Milan Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("specs/local.json")`, DB CACHE: `1024`

// Executed Command:
// ./target/release/node-chain
// benchmark
// pallet
// --chain
// specs/local.json
// --pallet
// pallet_chain
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// pallets/chain/src/weights.rs
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_chain`.
pub trait WeightInfo {
	fn add_stake() -> Weight;
	fn remove_stake() -> Weight;
	fn add_stake_multiple() -> Weight;
	fn remove_stake_multiple() -> Weight;
	fn transfer_stake() -> Weight;
	fn transfer_multiple() -> Weight;
	fn register() -> Weight;
	fn deregister() -> Weight;
	fn update_module() -> Weight;
	fn update_subnet() -> Weight;
	fn register_subnet() -> Weight;
}

/// Weights for `pallet_chain` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::MinimumAllowedStake` (r:1 w:0)
	/// Proof: `ChainModule::MinimumAllowedStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::N` (r:5 w:0)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Uids` (r:5 w:0)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeTo` (r:2 w:1)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeFrom` (r:3 w:1)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn add_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1576`
		//  Estimated: `14941`
		// Minimum execution time: 151_216_000 picoseconds.
		Weight::from_parts(153_059_000, 14941)
			.saturating_add(T::DbWeight::get().reads(18_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `ChainModule::StakeTo` (r:2 w:1)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinimumAllowedStake` (r:1 w:0)
	/// Proof: `ChainModule::MinimumAllowedStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::N` (r:5 w:0)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Uids` (r:5 w:0)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::StakeFrom` (r:3 w:1)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn remove_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1660`
		//  Estimated: `15025`
		// Minimum execution time: 160_063_000 picoseconds.
		Weight::from_parts(162_045_000, 15025)
			.saturating_add(T::DbWeight::get().reads(18_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `ChainModule::MinimumAllowedStake` (r:1 w:0)
	/// Proof: `ChainModule::MinimumAllowedStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::N` (r:5 w:0)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Uids` (r:10 w:0)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeTo` (r:3 w:2)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeFrom` (r:6 w:2)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn add_stake_multiple() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1792`
		//  Estimated: `27532`
		// Minimum execution time: 282_442_000 picoseconds.
		Weight::from_parts(285_408_000, 27532)
			.saturating_add(T::DbWeight::get().reads(27_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `ChainModule::MinimumAllowedStake` (r:1 w:0)
	/// Proof: `ChainModule::MinimumAllowedStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeTo` (r:3 w:2)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::N` (r:5 w:0)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Uids` (r:10 w:0)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::StakeFrom` (r:6 w:2)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn remove_stake_multiple() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1930`
		//  Estimated: `27670`
		// Minimum execution time: 332_348_000 picoseconds.
		Weight::from_parts(337_758_000, 27670)
			.saturating_add(T::DbWeight::get().reads(27_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `ChainModule::N` (r:5 w:0)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Uids` (r:10 w:0)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinimumAllowedStake` (r:1 w:0)
	/// Proof: `ChainModule::MinimumAllowedStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeTo` (r:3 w:2)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::StakeFrom` (r:6 w:2)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn transfer_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1876`
		//  Estimated: `27616`
		// Minimum execution time: 327_098_000 picoseconds.
		Weight::from_parts(331_797_000, 27616)
			.saturating_add(T::DbWeight::get().reads(27_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	fn transfer_multiple() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `77`
		//  Estimated: `8727`
		// Minimum execution time: 118_274_000 picoseconds.
		Weight::from_parts(120_186_000, 8727)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `ChainModule::RegistrationsPerBlock` (r:1 w:1)
	/// Proof: `ChainModule::RegistrationsPerBlock` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxRegistrationsPerBlock` (r:1 w:0)
	/// Proof: `ChainModule::MaxRegistrationsPerBlock` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetNames` (r:6 w:0)
	/// Proof: `ChainModule::SubnetNames` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ModuleBurnConfig` (r:1 w:0)
	/// Proof: `ChainModule::ModuleBurnConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::RegistrationsThisInterval` (r:1 w:1)
	/// Proof: `ChainModule::RegistrationsThisInterval` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedUids` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedUids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Uids` (r:1 w:1)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Keys` (r:1 w:1)
	/// Proof: `ChainModule::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `SubnetEmissionModule::SubnetConsensusType` (r:6 w:0)
	/// Proof: `SubnetEmissionModule::SubnetConsensusType` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Burn` (r:1 w:0)
	/// Proof: `ChainModule::Burn` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::N` (r:6 w:1)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedModules` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedModules` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Active` (r:1 w:1)
	/// Proof: `ChainModule::Active` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Consensus` (r:1 w:1)
	/// Proof: `ChainModule::Consensus` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Emission` (r:1 w:1)
	/// Proof: `ChainModule::Emission` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Incentive` (r:1 w:1)
	/// Proof: `ChainModule::Incentive` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Dividends` (r:1 w:1)
	/// Proof: `ChainModule::Dividends` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::LastUpdate` (r:1 w:1)
	/// Proof: `ChainModule::LastUpdate` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Rank` (r:1 w:1)
	/// Proof: `ChainModule::Rank` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Trust` (r:1 w:1)
	/// Proof: `ChainModule::Trust` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorPermits` (r:1 w:1)
	/// Proof: `ChainModule::ValidatorPermits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorTrust` (r:1 w:1)
	/// Proof: `ChainModule::ValidatorTrust` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::PruningScores` (r:1 w:1)
	/// Proof: `ChainModule::PruningScores` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MaxNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MinNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Name` (r:2 w:1)
	/// Proof: `ChainModule::Name` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinFees` (r:1 w:0)
	/// Proof: `ChainModule::MinFees` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeFrom` (r:1 w:1)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeTo` (r:1 w:1)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::RegistrationBlock` (r:0 w:1)
	/// Proof: `ChainModule::RegistrationBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Address` (r:0 w:1)
	/// Proof: `ChainModule::Address` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorFeeConfig` (r:0 w:1)
	/// Proof: `ChainModule::ValidatorFeeConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Bonds` (r:0 w:1)
	/// Proof: `ChainModule::Bonds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Metadata` (r:0 w:1)
	/// Proof: `ChainModule::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2889`
		//  Estimated: `18729`
		// Minimum execution time: 370_069_000 picoseconds.
		Weight::from_parts(375_410_000, 18729)
			.saturating_add(T::DbWeight::get().reads(47_u64))
			.saturating_add(T::DbWeight::get().writes(26_u64))
	}
	/// Storage: `ChainModule::Uids` (r:7 w:1)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::N` (r:1 w:1)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Keys` (r:2 w:1)
	/// Proof: `ChainModule::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Active` (r:1 w:1)
	/// Proof: `ChainModule::Active` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Consensus` (r:1 w:1)
	/// Proof: `ChainModule::Consensus` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Emission` (r:1 w:1)
	/// Proof: `ChainModule::Emission` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Incentive` (r:1 w:1)
	/// Proof: `ChainModule::Incentive` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Dividends` (r:1 w:1)
	/// Proof: `ChainModule::Dividends` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::LastUpdate` (r:1 w:1)
	/// Proof: `ChainModule::LastUpdate` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Rank` (r:1 w:1)
	/// Proof: `ChainModule::Rank` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Trust` (r:1 w:1)
	/// Proof: `ChainModule::Trust` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorPermits` (r:1 w:1)
	/// Proof: `ChainModule::ValidatorPermits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorTrust` (r:1 w:1)
	/// Proof: `ChainModule::ValidatorTrust` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::PruningScores` (r:1 w:1)
	/// Proof: `ChainModule::PruningScores` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::RegistrationBlock` (r:1 w:1)
	/// Proof: `ChainModule::RegistrationBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Address` (r:1 w:1)
	/// Proof: `ChainModule::Address` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Name` (r:1 w:1)
	/// Proof: `ChainModule::Name` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Bonds` (r:1 w:1)
	/// Proof: `ChainModule::Bonds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `SubnetEmissionModule::Weights` (r:1 w:0)
	/// Proof: `SubnetEmissionModule::Weights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeFrom` (r:2 w:1)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeTo` (r:1 w:1)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `SubnetEmissionModule::SubnetConsensusType` (r:1 w:1)
	/// Proof: `SubnetEmissionModule::SubnetConsensusType` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Metadata` (r:1 w:1)
	/// Proof: `ChainModule::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetGaps` (r:1 w:1)
	/// Proof: `ChainModule::SubnetGaps` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::SubnetGovernanceConfig` (r:0 w:1)
	/// Proof: `GovernanceModule::SubnetGovernanceConfig` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::Burn` (r:0 w:1)
	/// Proof: `ChainModule::Burn` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::WeightSettingDelegation` (r:0 w:1)
	/// Proof: `ChainModule::WeightSettingDelegation` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ModuleBurnConfig` (r:0 w:1)
	/// Proof: `ChainModule::ModuleBurnConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxWeightAge` (r:0 w:1)
	/// Proof: `ChainModule::MaxWeightAge` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::RegistrationsThisInterval` (r:0 w:1)
	/// Proof: `ChainModule::RegistrationsThisInterval` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetRegistrationBlock` (r:0 w:1)
	/// Proof: `ChainModule::SubnetRegistrationBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::AlphaValues` (r:0 w:1)
	/// Proof: `ChainModule::AlphaValues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorFeeConfig` (r:0 w:1)
	/// Proof: `ChainModule::ValidatorFeeConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::RootNetWeightCalls` (r:0 w:1)
	/// Proof: `ChainModule::RootNetWeightCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinAllowedWeights` (r:0 w:1)
	/// Proof: `ChainModule::MinAllowedWeights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::UseWeightsEncryption` (r:0 w:1)
	/// Proof: `ChainModule::UseWeightsEncryption` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::IncentiveRatio` (r:0 w:1)
	/// Proof: `ChainModule::IncentiveRatio` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedValidators` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedValidators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedWeights` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedWeights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Tempo` (r:0 w:1)
	/// Proof: `ChainModule::Tempo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SetWeightCallsPerEpoch` (r:0 w:1)
	/// Proof: `ChainModule::SetWeightCallsPerEpoch` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetMetadata` (r:0 w:1)
	/// Proof: `ChainModule::SubnetMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetNames` (r:0 w:1)
	/// Proof: `ChainModule::SubnetNames` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::FounderShare` (r:0 w:1)
	/// Proof: `ChainModule::FounderShare` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Founder` (r:0 w:1)
	/// Proof: `ChainModule::Founder` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinValidatorStake` (r:0 w:1)
	/// Proof: `ChainModule::MinValidatorStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ImmunityPeriod` (r:0 w:1)
	/// Proof: `ChainModule::ImmunityPeriod` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::BondsMovingAverage` (r:0 w:1)
	/// Proof: `ChainModule::BondsMovingAverage` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::CopierMargin` (r:0 w:1)
	/// Proof: `ChainModule::CopierMargin` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedUids` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedUids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaximumSetWeightCallsPerEpoch` (r:0 w:1)
	/// Proof: `ChainModule::MaximumSetWeightCallsPerEpoch` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxEncryptionPeriod` (r:0 w:1)
	/// Proof: `ChainModule::MaxEncryptionPeriod` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn deregister() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3297`
		//  Estimated: `21612`
		// Minimum execution time: 493_932_000 picoseconds.
		Weight::from_parts(499_553_000, 21612)
			.saturating_add(T::DbWeight::get().reads(34_u64))
			.saturating_add(T::DbWeight::get().writes(54_u64))
	}
	/// Storage: `ChainModule::Uids` (r:1 w:0)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Name` (r:2 w:1)
	/// Proof: `ChainModule::Name` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Address` (r:1 w:1)
	/// Proof: `ChainModule::Address` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorFeeConfig` (r:1 w:1)
	/// Proof: `ChainModule::ValidatorFeeConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Metadata` (r:1 w:1)
	/// Proof: `ChainModule::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MaxNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MinNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinFees` (r:1 w:0)
	/// Proof: `ChainModule::MinFees` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn update_module() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1629`
		//  Estimated: `7569`
		// Minimum execution time: 104_376_000 picoseconds.
		Weight::from_parts(105_519_000, 7569)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `GovernanceModule::SubnetGovernanceConfig` (r:1 w:1)
	/// Proof: `GovernanceModule::SubnetGovernanceConfig` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::MaxNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MaxNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MinNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedSubnets` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedSubnets` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedModules` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedModules` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::Curator` (r:1 w:0)
	/// Proof: `GovernanceModule::Curator` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::FloorFounderShare` (r:1 w:0)
	/// Proof: `ChainModule::FloorFounderShare` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinFees` (r:1 w:0)
	/// Proof: `ChainModule::MinFees` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxRegistrationsPerBlock` (r:1 w:0)
	/// Proof: `ChainModule::MaxRegistrationsPerBlock` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedWeightsGlobal` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedWeightsGlobal` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinWeightStake` (r:1 w:0)
	/// Proof: `ChainModule::MinWeightStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetImmunityPeriod` (r:1 w:0)
	/// Proof: `ChainModule::SubnetImmunityPeriod` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::GeneralSubnetApplicationCost` (r:1 w:0)
	/// Proof: `GovernanceModule::GeneralSubnetApplicationCost` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::Kappa` (r:1 w:0)
	/// Proof: `ChainModule::Kappa` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Rho` (r:1 w:0)
	/// Proof: `ChainModule::Rho` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `GovernanceModule::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(30), added: 525, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::N` (r:1 w:0)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetNames` (r:6 w:1)
	/// Proof: `ChainModule::SubnetNames` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Founder` (r:1 w:1)
	/// Proof: `ChainModule::Founder` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ModuleBurnConfig` (r:0 w:1)
	/// Proof: `ChainModule::ModuleBurnConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxWeightAge` (r:0 w:1)
	/// Proof: `ChainModule::MaxWeightAge` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinAllowedWeights` (r:0 w:1)
	/// Proof: `ChainModule::MinAllowedWeights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::UseWeightsEncryption` (r:0 w:1)
	/// Proof: `ChainModule::UseWeightsEncryption` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::IncentiveRatio` (r:0 w:1)
	/// Proof: `ChainModule::IncentiveRatio` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedValidators` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedValidators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedWeights` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedWeights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Tempo` (r:0 w:1)
	/// Proof: `ChainModule::Tempo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetMetadata` (r:0 w:1)
	/// Proof: `ChainModule::SubnetMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::FounderShare` (r:0 w:1)
	/// Proof: `ChainModule::FounderShare` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinValidatorStake` (r:0 w:1)
	/// Proof: `ChainModule::MinValidatorStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ImmunityPeriod` (r:0 w:1)
	/// Proof: `ChainModule::ImmunityPeriod` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::BondsMovingAverage` (r:0 w:1)
	/// Proof: `ChainModule::BondsMovingAverage` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::CopierMargin` (r:0 w:1)
	/// Proof: `ChainModule::CopierMargin` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedUids` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedUids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxEncryptionPeriod` (r:0 w:1)
	/// Proof: `ChainModule::MaxEncryptionPeriod` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_subnet() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1854`
		//  Estimated: `17694`
		// Minimum execution time: 151_205_000 picoseconds.
		Weight::from_parts(153_158_000, 17694)
			.saturating_add(T::DbWeight::get().reads(24_u64))
			.saturating_add(T::DbWeight::get().writes(19_u64))
	}
	/// Storage: `ChainModule::SubnetNames` (r:5 w:1)
	/// Proof: `ChainModule::SubnetNames` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::FloorFounderShare` (r:1 w:0)
	/// Proof: `ChainModule::FloorFounderShare` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MaxNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MinNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedSubnets` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedSubnets` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedModules` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedModules` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::Curator` (r:1 w:0)
	/// Proof: `GovernanceModule::Curator` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::MinFees` (r:1 w:0)
	/// Proof: `ChainModule::MinFees` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxRegistrationsPerBlock` (r:1 w:0)
	/// Proof: `ChainModule::MaxRegistrationsPerBlock` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedWeightsGlobal` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedWeightsGlobal` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinWeightStake` (r:1 w:0)
	/// Proof: `ChainModule::MinWeightStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetImmunityPeriod` (r:1 w:0)
	/// Proof: `ChainModule::SubnetImmunityPeriod` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::GeneralSubnetApplicationCost` (r:1 w:0)
	/// Proof: `GovernanceModule::GeneralSubnetApplicationCost` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::Kappa` (r:1 w:0)
	/// Proof: `ChainModule::Kappa` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Rho` (r:1 w:0)
	/// Proof: `ChainModule::Rho` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `GovernanceModule::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(30), added: 525, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::SubnetBurn` (r:1 w:0)
	/// Proof: `ChainModule::SubnetBurn` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::N` (r:6 w:1)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetGaps` (r:1 w:1)
	/// Proof: `ChainModule::SubnetGaps` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetRegistrationsThisInterval` (r:1 w:1)
	/// Proof: `ChainModule::SubnetRegistrationsThisInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `SubnetEmissionModule::SubnetEmission` (r:0 w:1)
	/// Proof: `SubnetEmissionModule::SubnetEmission` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `SubnetEmissionModule::SubnetConsensusType` (r:0 w:1)
	/// Proof: `SubnetEmissionModule::SubnetConsensusType` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::SubnetGovernanceConfig` (r:0 w:1)
	/// Proof: `GovernanceModule::SubnetGovernanceConfig` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::Burn` (r:0 w:1)
	/// Proof: `ChainModule::Burn` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ModuleBurnConfig` (r:0 w:1)
	/// Proof: `ChainModule::ModuleBurnConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxWeightAge` (r:0 w:1)
	/// Proof: `ChainModule::MaxWeightAge` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetRegistrationBlock` (r:0 w:1)
	/// Proof: `ChainModule::SubnetRegistrationBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinAllowedWeights` (r:0 w:1)
	/// Proof: `ChainModule::MinAllowedWeights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::UseWeightsEncryption` (r:0 w:1)
	/// Proof: `ChainModule::UseWeightsEncryption` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::IncentiveRatio` (r:0 w:1)
	/// Proof: `ChainModule::IncentiveRatio` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedValidators` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedValidators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedWeights` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedWeights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Tempo` (r:0 w:1)
	/// Proof: `ChainModule::Tempo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetMetadata` (r:0 w:1)
	/// Proof: `ChainModule::SubnetMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::FounderShare` (r:0 w:1)
	/// Proof: `ChainModule::FounderShare` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Founder` (r:0 w:1)
	/// Proof: `ChainModule::Founder` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinValidatorStake` (r:0 w:1)
	/// Proof: `ChainModule::MinValidatorStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ImmunityPeriod` (r:0 w:1)
	/// Proof: `ChainModule::ImmunityPeriod` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::BondsMovingAverage` (r:0 w:1)
	/// Proof: `ChainModule::BondsMovingAverage` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::CopierMargin` (r:0 w:1)
	/// Proof: `ChainModule::CopierMargin` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedUids` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedUids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxEncryptionPeriod` (r:0 w:1)
	/// Proof: `ChainModule::MaxEncryptionPeriod` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register_subnet() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1497`
		//  Estimated: `17337`
		// Minimum execution time: 212_812_000 picoseconds.
		Weight::from_parts(216_789_000, 17337)
			.saturating_add(T::DbWeight::get().reads(30_u64))
			.saturating_add(T::DbWeight::get().writes(27_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::MinimumAllowedStake` (r:1 w:0)
	/// Proof: `ChainModule::MinimumAllowedStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::N` (r:5 w:0)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Uids` (r:5 w:0)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeTo` (r:2 w:1)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeFrom` (r:3 w:1)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn add_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1576`
		//  Estimated: `14941`
		// Minimum execution time: 151_216_000 picoseconds.
		Weight::from_parts(153_059_000, 14941)
			.saturating_add(RocksDbWeight::get().reads(18_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `ChainModule::StakeTo` (r:2 w:1)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinimumAllowedStake` (r:1 w:0)
	/// Proof: `ChainModule::MinimumAllowedStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::N` (r:5 w:0)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Uids` (r:5 w:0)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::StakeFrom` (r:3 w:1)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn remove_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1660`
		//  Estimated: `15025`
		// Minimum execution time: 160_063_000 picoseconds.
		Weight::from_parts(162_045_000, 15025)
			.saturating_add(RocksDbWeight::get().reads(18_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `ChainModule::MinimumAllowedStake` (r:1 w:0)
	/// Proof: `ChainModule::MinimumAllowedStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::N` (r:5 w:0)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Uids` (r:10 w:0)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeTo` (r:3 w:2)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeFrom` (r:6 w:2)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn add_stake_multiple() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1792`
		//  Estimated: `27532`
		// Minimum execution time: 282_442_000 picoseconds.
		Weight::from_parts(285_408_000, 27532)
			.saturating_add(RocksDbWeight::get().reads(27_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `ChainModule::MinimumAllowedStake` (r:1 w:0)
	/// Proof: `ChainModule::MinimumAllowedStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeTo` (r:3 w:2)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::N` (r:5 w:0)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Uids` (r:10 w:0)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::StakeFrom` (r:6 w:2)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn remove_stake_multiple() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1930`
		//  Estimated: `27670`
		// Minimum execution time: 332_348_000 picoseconds.
		Weight::from_parts(337_758_000, 27670)
			.saturating_add(RocksDbWeight::get().reads(27_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `ChainModule::N` (r:5 w:0)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Uids` (r:10 w:0)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinimumAllowedStake` (r:1 w:0)
	/// Proof: `ChainModule::MinimumAllowedStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeTo` (r:3 w:2)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::StakeFrom` (r:6 w:2)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn transfer_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1876`
		//  Estimated: `27616`
		// Minimum execution time: 327_098_000 picoseconds.
		Weight::from_parts(331_797_000, 27616)
			.saturating_add(RocksDbWeight::get().reads(27_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	fn transfer_multiple() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `77`
		//  Estimated: `8727`
		// Minimum execution time: 118_274_000 picoseconds.
		Weight::from_parts(120_186_000, 8727)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `ChainModule::RegistrationsPerBlock` (r:1 w:1)
	/// Proof: `ChainModule::RegistrationsPerBlock` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxRegistrationsPerBlock` (r:1 w:0)
	/// Proof: `ChainModule::MaxRegistrationsPerBlock` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetNames` (r:6 w:0)
	/// Proof: `ChainModule::SubnetNames` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ModuleBurnConfig` (r:1 w:0)
	/// Proof: `ChainModule::ModuleBurnConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::RegistrationsThisInterval` (r:1 w:1)
	/// Proof: `ChainModule::RegistrationsThisInterval` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedUids` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedUids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Uids` (r:1 w:1)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Keys` (r:1 w:1)
	/// Proof: `ChainModule::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `SubnetEmissionModule::SubnetConsensusType` (r:6 w:0)
	/// Proof: `SubnetEmissionModule::SubnetConsensusType` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Burn` (r:1 w:0)
	/// Proof: `ChainModule::Burn` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::N` (r:6 w:1)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedModules` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedModules` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Active` (r:1 w:1)
	/// Proof: `ChainModule::Active` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Consensus` (r:1 w:1)
	/// Proof: `ChainModule::Consensus` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Emission` (r:1 w:1)
	/// Proof: `ChainModule::Emission` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Incentive` (r:1 w:1)
	/// Proof: `ChainModule::Incentive` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Dividends` (r:1 w:1)
	/// Proof: `ChainModule::Dividends` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::LastUpdate` (r:1 w:1)
	/// Proof: `ChainModule::LastUpdate` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Rank` (r:1 w:1)
	/// Proof: `ChainModule::Rank` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Trust` (r:1 w:1)
	/// Proof: `ChainModule::Trust` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorPermits` (r:1 w:1)
	/// Proof: `ChainModule::ValidatorPermits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorTrust` (r:1 w:1)
	/// Proof: `ChainModule::ValidatorTrust` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::PruningScores` (r:1 w:1)
	/// Proof: `ChainModule::PruningScores` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MaxNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MinNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Name` (r:2 w:1)
	/// Proof: `ChainModule::Name` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinFees` (r:1 w:0)
	/// Proof: `ChainModule::MinFees` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeFrom` (r:1 w:1)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeTo` (r:1 w:1)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::RegistrationBlock` (r:0 w:1)
	/// Proof: `ChainModule::RegistrationBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Address` (r:0 w:1)
	/// Proof: `ChainModule::Address` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorFeeConfig` (r:0 w:1)
	/// Proof: `ChainModule::ValidatorFeeConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Bonds` (r:0 w:1)
	/// Proof: `ChainModule::Bonds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Metadata` (r:0 w:1)
	/// Proof: `ChainModule::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2889`
		//  Estimated: `18729`
		// Minimum execution time: 370_069_000 picoseconds.
		Weight::from_parts(375_410_000, 18729)
			.saturating_add(RocksDbWeight::get().reads(47_u64))
			.saturating_add(RocksDbWeight::get().writes(26_u64))
	}
	/// Storage: `ChainModule::Uids` (r:7 w:1)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::N` (r:1 w:1)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Keys` (r:2 w:1)
	/// Proof: `ChainModule::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Active` (r:1 w:1)
	/// Proof: `ChainModule::Active` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Consensus` (r:1 w:1)
	/// Proof: `ChainModule::Consensus` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Emission` (r:1 w:1)
	/// Proof: `ChainModule::Emission` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Incentive` (r:1 w:1)
	/// Proof: `ChainModule::Incentive` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Dividends` (r:1 w:1)
	/// Proof: `ChainModule::Dividends` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::LastUpdate` (r:1 w:1)
	/// Proof: `ChainModule::LastUpdate` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Rank` (r:1 w:1)
	/// Proof: `ChainModule::Rank` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Trust` (r:1 w:1)
	/// Proof: `ChainModule::Trust` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorPermits` (r:1 w:1)
	/// Proof: `ChainModule::ValidatorPermits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorTrust` (r:1 w:1)
	/// Proof: `ChainModule::ValidatorTrust` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::PruningScores` (r:1 w:1)
	/// Proof: `ChainModule::PruningScores` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::RegistrationBlock` (r:1 w:1)
	/// Proof: `ChainModule::RegistrationBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Address` (r:1 w:1)
	/// Proof: `ChainModule::Address` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Name` (r:1 w:1)
	/// Proof: `ChainModule::Name` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Bonds` (r:1 w:1)
	/// Proof: `ChainModule::Bonds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `SubnetEmissionModule::Weights` (r:1 w:0)
	/// Proof: `SubnetEmissionModule::Weights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeFrom` (r:2 w:1)
	/// Proof: `ChainModule::StakeFrom` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::StakeTo` (r:1 w:1)
	/// Proof: `ChainModule::StakeTo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::TotalStake` (r:1 w:1)
	/// Proof: `ChainModule::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `SubnetEmissionModule::SubnetConsensusType` (r:1 w:1)
	/// Proof: `SubnetEmissionModule::SubnetConsensusType` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Metadata` (r:1 w:1)
	/// Proof: `ChainModule::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetGaps` (r:1 w:1)
	/// Proof: `ChainModule::SubnetGaps` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::SubnetGovernanceConfig` (r:0 w:1)
	/// Proof: `GovernanceModule::SubnetGovernanceConfig` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::Burn` (r:0 w:1)
	/// Proof: `ChainModule::Burn` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::WeightSettingDelegation` (r:0 w:1)
	/// Proof: `ChainModule::WeightSettingDelegation` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ModuleBurnConfig` (r:0 w:1)
	/// Proof: `ChainModule::ModuleBurnConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxWeightAge` (r:0 w:1)
	/// Proof: `ChainModule::MaxWeightAge` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::RegistrationsThisInterval` (r:0 w:1)
	/// Proof: `ChainModule::RegistrationsThisInterval` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetRegistrationBlock` (r:0 w:1)
	/// Proof: `ChainModule::SubnetRegistrationBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::AlphaValues` (r:0 w:1)
	/// Proof: `ChainModule::AlphaValues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorFeeConfig` (r:0 w:1)
	/// Proof: `ChainModule::ValidatorFeeConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::RootNetWeightCalls` (r:0 w:1)
	/// Proof: `ChainModule::RootNetWeightCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinAllowedWeights` (r:0 w:1)
	/// Proof: `ChainModule::MinAllowedWeights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::UseWeightsEncryption` (r:0 w:1)
	/// Proof: `ChainModule::UseWeightsEncryption` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::IncentiveRatio` (r:0 w:1)
	/// Proof: `ChainModule::IncentiveRatio` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedValidators` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedValidators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedWeights` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedWeights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Tempo` (r:0 w:1)
	/// Proof: `ChainModule::Tempo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SetWeightCallsPerEpoch` (r:0 w:1)
	/// Proof: `ChainModule::SetWeightCallsPerEpoch` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetMetadata` (r:0 w:1)
	/// Proof: `ChainModule::SubnetMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetNames` (r:0 w:1)
	/// Proof: `ChainModule::SubnetNames` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::FounderShare` (r:0 w:1)
	/// Proof: `ChainModule::FounderShare` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Founder` (r:0 w:1)
	/// Proof: `ChainModule::Founder` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinValidatorStake` (r:0 w:1)
	/// Proof: `ChainModule::MinValidatorStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ImmunityPeriod` (r:0 w:1)
	/// Proof: `ChainModule::ImmunityPeriod` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::BondsMovingAverage` (r:0 w:1)
	/// Proof: `ChainModule::BondsMovingAverage` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::CopierMargin` (r:0 w:1)
	/// Proof: `ChainModule::CopierMargin` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedUids` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedUids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaximumSetWeightCallsPerEpoch` (r:0 w:1)
	/// Proof: `ChainModule::MaximumSetWeightCallsPerEpoch` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxEncryptionPeriod` (r:0 w:1)
	/// Proof: `ChainModule::MaxEncryptionPeriod` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn deregister() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3297`
		//  Estimated: `21612`
		// Minimum execution time: 493_932_000 picoseconds.
		Weight::from_parts(499_553_000, 21612)
			.saturating_add(RocksDbWeight::get().reads(34_u64))
			.saturating_add(RocksDbWeight::get().writes(54_u64))
	}
	/// Storage: `ChainModule::Uids` (r:1 w:0)
	/// Proof: `ChainModule::Uids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Name` (r:2 w:1)
	/// Proof: `ChainModule::Name` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Address` (r:1 w:1)
	/// Proof: `ChainModule::Address` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ValidatorFeeConfig` (r:1 w:1)
	/// Proof: `ChainModule::ValidatorFeeConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Metadata` (r:1 w:1)
	/// Proof: `ChainModule::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MaxNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MinNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinFees` (r:1 w:0)
	/// Proof: `ChainModule::MinFees` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn update_module() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1629`
		//  Estimated: `7569`
		// Minimum execution time: 104_376_000 picoseconds.
		Weight::from_parts(105_519_000, 7569)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `GovernanceModule::SubnetGovernanceConfig` (r:1 w:1)
	/// Proof: `GovernanceModule::SubnetGovernanceConfig` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::MaxNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MaxNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MinNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedSubnets` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedSubnets` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedModules` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedModules` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::Curator` (r:1 w:0)
	/// Proof: `GovernanceModule::Curator` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::FloorFounderShare` (r:1 w:0)
	/// Proof: `ChainModule::FloorFounderShare` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinFees` (r:1 w:0)
	/// Proof: `ChainModule::MinFees` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxRegistrationsPerBlock` (r:1 w:0)
	/// Proof: `ChainModule::MaxRegistrationsPerBlock` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedWeightsGlobal` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedWeightsGlobal` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinWeightStake` (r:1 w:0)
	/// Proof: `ChainModule::MinWeightStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetImmunityPeriod` (r:1 w:0)
	/// Proof: `ChainModule::SubnetImmunityPeriod` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::GeneralSubnetApplicationCost` (r:1 w:0)
	/// Proof: `GovernanceModule::GeneralSubnetApplicationCost` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::Kappa` (r:1 w:0)
	/// Proof: `ChainModule::Kappa` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Rho` (r:1 w:0)
	/// Proof: `ChainModule::Rho` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `GovernanceModule::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(30), added: 525, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::N` (r:1 w:0)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetNames` (r:6 w:1)
	/// Proof: `ChainModule::SubnetNames` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Founder` (r:1 w:1)
	/// Proof: `ChainModule::Founder` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ModuleBurnConfig` (r:0 w:1)
	/// Proof: `ChainModule::ModuleBurnConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxWeightAge` (r:0 w:1)
	/// Proof: `ChainModule::MaxWeightAge` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinAllowedWeights` (r:0 w:1)
	/// Proof: `ChainModule::MinAllowedWeights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::UseWeightsEncryption` (r:0 w:1)
	/// Proof: `ChainModule::UseWeightsEncryption` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::IncentiveRatio` (r:0 w:1)
	/// Proof: `ChainModule::IncentiveRatio` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedValidators` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedValidators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedWeights` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedWeights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Tempo` (r:0 w:1)
	/// Proof: `ChainModule::Tempo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetMetadata` (r:0 w:1)
	/// Proof: `ChainModule::SubnetMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::FounderShare` (r:0 w:1)
	/// Proof: `ChainModule::FounderShare` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinValidatorStake` (r:0 w:1)
	/// Proof: `ChainModule::MinValidatorStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ImmunityPeriod` (r:0 w:1)
	/// Proof: `ChainModule::ImmunityPeriod` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::BondsMovingAverage` (r:0 w:1)
	/// Proof: `ChainModule::BondsMovingAverage` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::CopierMargin` (r:0 w:1)
	/// Proof: `ChainModule::CopierMargin` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedUids` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedUids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxEncryptionPeriod` (r:0 w:1)
	/// Proof: `ChainModule::MaxEncryptionPeriod` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_subnet() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1854`
		//  Estimated: `17694`
		// Minimum execution time: 151_205_000 picoseconds.
		Weight::from_parts(153_158_000, 17694)
			.saturating_add(RocksDbWeight::get().reads(24_u64))
			.saturating_add(RocksDbWeight::get().writes(19_u64))
	}
	/// Storage: `ChainModule::SubnetNames` (r:5 w:1)
	/// Proof: `ChainModule::SubnetNames` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::FloorFounderShare` (r:1 w:0)
	/// Proof: `ChainModule::FloorFounderShare` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MaxNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinNameLength` (r:1 w:0)
	/// Proof: `ChainModule::MinNameLength` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedSubnets` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedSubnets` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedModules` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedModules` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::Curator` (r:1 w:0)
	/// Proof: `GovernanceModule::Curator` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::MinFees` (r:1 w:0)
	/// Proof: `ChainModule::MinFees` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxRegistrationsPerBlock` (r:1 w:0)
	/// Proof: `ChainModule::MaxRegistrationsPerBlock` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedWeightsGlobal` (r:1 w:0)
	/// Proof: `ChainModule::MaxAllowedWeightsGlobal` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinWeightStake` (r:1 w:0)
	/// Proof: `ChainModule::MinWeightStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetImmunityPeriod` (r:1 w:0)
	/// Proof: `ChainModule::SubnetImmunityPeriod` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::GeneralSubnetApplicationCost` (r:1 w:0)
	/// Proof: `GovernanceModule::GeneralSubnetApplicationCost` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::Kappa` (r:1 w:0)
	/// Proof: `ChainModule::Kappa` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Rho` (r:1 w:0)
	/// Proof: `ChainModule::Rho` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `GovernanceModule::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(30), added: 525, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::SubnetBurn` (r:1 w:0)
	/// Proof: `ChainModule::SubnetBurn` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::N` (r:6 w:1)
	/// Proof: `ChainModule::N` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetGaps` (r:1 w:1)
	/// Proof: `ChainModule::SubnetGaps` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetRegistrationsThisInterval` (r:1 w:1)
	/// Proof: `ChainModule::SubnetRegistrationsThisInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `SubnetEmissionModule::SubnetEmission` (r:0 w:1)
	/// Proof: `SubnetEmissionModule::SubnetEmission` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `SubnetEmissionModule::SubnetConsensusType` (r:0 w:1)
	/// Proof: `SubnetEmissionModule::SubnetConsensusType` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `GovernanceModule::SubnetGovernanceConfig` (r:0 w:1)
	/// Proof: `GovernanceModule::SubnetGovernanceConfig` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `ChainModule::Burn` (r:0 w:1)
	/// Proof: `ChainModule::Burn` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ModuleBurnConfig` (r:0 w:1)
	/// Proof: `ChainModule::ModuleBurnConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxWeightAge` (r:0 w:1)
	/// Proof: `ChainModule::MaxWeightAge` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetRegistrationBlock` (r:0 w:1)
	/// Proof: `ChainModule::SubnetRegistrationBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinAllowedWeights` (r:0 w:1)
	/// Proof: `ChainModule::MinAllowedWeights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::UseWeightsEncryption` (r:0 w:1)
	/// Proof: `ChainModule::UseWeightsEncryption` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::IncentiveRatio` (r:0 w:1)
	/// Proof: `ChainModule::IncentiveRatio` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedValidators` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedValidators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedWeights` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedWeights` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Tempo` (r:0 w:1)
	/// Proof: `ChainModule::Tempo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::SubnetMetadata` (r:0 w:1)
	/// Proof: `ChainModule::SubnetMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::FounderShare` (r:0 w:1)
	/// Proof: `ChainModule::FounderShare` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::Founder` (r:0 w:1)
	/// Proof: `ChainModule::Founder` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MinValidatorStake` (r:0 w:1)
	/// Proof: `ChainModule::MinValidatorStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::ImmunityPeriod` (r:0 w:1)
	/// Proof: `ChainModule::ImmunityPeriod` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::BondsMovingAverage` (r:0 w:1)
	/// Proof: `ChainModule::BondsMovingAverage` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::CopierMargin` (r:0 w:1)
	/// Proof: `ChainModule::CopierMargin` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxAllowedUids` (r:0 w:1)
	/// Proof: `ChainModule::MaxAllowedUids` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ChainModule::MaxEncryptionPeriod` (r:0 w:1)
	/// Proof: `ChainModule::MaxEncryptionPeriod` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register_subnet() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1497`
		//  Estimated: `17337`
		// Minimum execution time: 212_812_000 picoseconds.
		Weight::from_parts(216_789_000, 17337)
			.saturating_add(RocksDbWeight::get().reads(30_u64))
			.saturating_add(RocksDbWeight::get().writes(27_u64))
	}
}